{"ast":null,"code":"import { cn } from '@primeuix/utils';\nimport { isNotEmpty } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport ToggleButtonStyle from 'primevue/togglebutton/style';\nimport { resolveDirective, withDirectives, createElementBlock, openBlock, mergeProps, createElementVNode, renderSlot, normalizeClass, createCommentVNode, toDisplayString } from 'vue';\nvar script$1 = {\n  name: 'BaseToggleButton',\n  \"extends\": BaseEditableHolder,\n  props: {\n    onIcon: String,\n    offIcon: String,\n    onLabel: {\n      type: String,\n      \"default\": 'Yes'\n    },\n    offLabel: {\n      type: String,\n      \"default\": 'No'\n    },\n    iconPos: {\n      type: String,\n      \"default\": 'left'\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": null\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    },\n    size: {\n      type: String,\n      \"default\": null\n    },\n    fluid: {\n      type: Boolean,\n      \"default\": null\n    }\n  },\n  style: ToggleButtonStyle,\n  provide: function provide() {\n    return {\n      $pcToggleButton: this,\n      $parentInstance: this\n    };\n  }\n};\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r);\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar script = {\n  name: 'ToggleButton',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['change'],\n  methods: {\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          active: this.active,\n          disabled: this.disabled\n        }\n      });\n    },\n    onChange: function onChange(event) {\n      if (!this.disabled && !this.readonly) {\n        this.writeValue(!this.d_value, event);\n        this.$emit('change', event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      var _this$formField$onBlu, _this$formField;\n      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField, event);\n    }\n  },\n  computed: {\n    active: function active() {\n      return this.d_value === true;\n    },\n    hasLabel: function hasLabel() {\n      return isNotEmpty(this.onLabel) && isNotEmpty(this.offLabel);\n    },\n    label: function label() {\n      return this.hasLabel ? this.d_value ? this.onLabel : this.offLabel : \"\\xA0\";\n    },\n    dataP: function dataP() {\n      return cn(_defineProperty({\n        checked: this.active,\n        invalid: this.$invalid\n      }, this.size, this.size));\n    }\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\nvar _hoisted_1 = [\"tabindex\", \"disabled\", \"aria-pressed\", \"aria-label\", \"aria-labelledby\", \"data-p-checked\", \"data-p-disabled\", \"data-p\"];\nvar _hoisted_2 = [\"data-p\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_ripple = resolveDirective(\"ripple\");\n  return withDirectives((openBlock(), createElementBlock(\"button\", mergeProps({\n    type: \"button\",\n    \"class\": _ctx.cx('root'),\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.disabled,\n    \"aria-pressed\": _ctx.d_value,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.onChange && $options.onChange.apply($options, arguments);\n    }),\n    onBlur: _cache[1] || (_cache[1] = function () {\n      return $options.onBlur && $options.onBlur.apply($options, arguments);\n    })\n  }, $options.getPTOptions('root'), {\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"data-p-checked\": $options.active,\n    \"data-p-disabled\": _ctx.disabled,\n    \"data-p\": $options.dataP\n  }), [createElementVNode(\"span\", mergeProps({\n    \"class\": _ctx.cx('content')\n  }, $options.getPTOptions('content'), {\n    \"data-p\": $options.dataP\n  }), [renderSlot(_ctx.$slots, \"default\", {}, function () {\n    return [renderSlot(_ctx.$slots, \"icon\", {\n      value: _ctx.d_value,\n      \"class\": normalizeClass(_ctx.cx('icon'))\n    }, function () {\n      return [_ctx.onIcon || _ctx.offIcon ? (openBlock(), createElementBlock(\"span\", mergeProps({\n        key: 0,\n        \"class\": [_ctx.cx('icon'), _ctx.d_value ? _ctx.onIcon : _ctx.offIcon]\n      }, $options.getPTOptions('icon')), null, 16)) : createCommentVNode(\"\", true)];\n    }), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('label')\n    }, $options.getPTOptions('label')), toDisplayString($options.label), 17)];\n  })], 16, _hoisted_2)], 16, _hoisted_1)), [[_directive_ripple]]);\n}\nscript.render = render;\nexport { script as default };","map":{"version":3,"names":["script$1","name","BaseEditableHolder","props","onIcon","String","offIcon","onLabel","type","offLabel","iconPos","readonly","Boolean","tabindex","Number","ariaLabelledby","ariaLabel","size","fluid","style","ToggleButtonStyle","provide","$pcToggleButton","$parentInstance","script","inheritAttrs","emits","methods","getPTOptions","key","_ptm","ptmi","ptm","context","active","disabled","onChange","event","writeValue","d_value","$emit","onBlur","_this$formField$onBlu","_this$formField","formField","call","computed","hasLabel","isNotEmpty","label","dataP","cn","_defineProperty","checked","invalid","$invalid","directives","ripple","Ripple","withDirectives","openBlock","createElementBlock","mergeProps","_ctx","cx","onClick","_cache","$options","apply","arguments","createElementVNode","renderSlot","$slots","value","normalizeClass","createCommentVNode","toDisplayString"],"sources":["../../src/togglebutton/BaseToggleButton.vue","../../src/togglebutton/ToggleButton.vue","../../src/togglebutton/ToggleButton.vue?vue&type=template&id=7a5c1ac9&lang.js"],"sourcesContent":["<script>\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport ToggleButtonStyle from 'primevue/togglebutton/style';\n\nexport default {\n    name: 'BaseToggleButton',\n    extends: BaseEditableHolder,\n    props: {\n        onIcon: String,\n        offIcon: String,\n        onLabel: {\n            type: String,\n            default: 'Yes'\n        },\n        offLabel: {\n            type: String,\n            default: 'No'\n        },\n        iconPos: {\n            type: String,\n            default: 'left'\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        fluid: {\n            type: Boolean,\n            default: null\n        }\n    },\n    style: ToggleButtonStyle,\n    provide() {\n        return {\n            $pcToggleButton: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <button\n        v-ripple\n        type=\"button\"\n        :class=\"cx('root')\"\n        :tabindex=\"tabindex\"\n        :disabled=\"disabled\"\n        :aria-pressed=\"d_value\"\n        @click=\"onChange\"\n        @blur=\"onBlur\"\n        v-bind=\"getPTOptions('root')\"\n        :aria-label=\"ariaLabel\"\n        :aria-labelledby=\"ariaLabelledby\"\n        :data-p-checked=\"active\"\n        :data-p-disabled=\"disabled\"\n        :data-p=\"dataP\"\n    >\n        <span :class=\"cx('content')\" v-bind=\"getPTOptions('content')\" :data-p=\"dataP\">\n            <slot>\n                <slot name=\"icon\" :value=\"d_value\" :class=\"cx('icon')\">\n                    <span v-if=\"onIcon || offIcon\" :class=\"[cx('icon'), d_value ? onIcon : offIcon]\" v-bind=\"getPTOptions('icon')\" />\n                </slot>\n                <span :class=\"cx('label')\" v-bind=\"getPTOptions('label')\">{{ label }}</span>\n            </slot>\n        </span>\n    </button>\n</template>\n\n<script>\nimport { cn } from '@primeuix/utils';\nimport { isNotEmpty } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport BaseToggleButton from './BaseToggleButton.vue';\n\nexport default {\n    name: 'ToggleButton',\n    extends: BaseToggleButton,\n    inheritAttrs: false,\n    emits: ['change'],\n    methods: {\n        getPTOptions(key) {\n            const _ptm = key === 'root' ? this.ptmi : this.ptm;\n\n            return _ptm(key, {\n                context: {\n                    active: this.active,\n                    disabled: this.disabled\n                }\n            });\n        },\n        onChange(event) {\n            if (!this.disabled && !this.readonly) {\n                this.writeValue(!this.d_value, event);\n                this.$emit('change', event);\n            }\n        },\n        onBlur(event) {\n            this.formField.onBlur?.(event);\n        }\n    },\n    computed: {\n        active() {\n            return this.d_value === true;\n        },\n        hasLabel() {\n            return isNotEmpty(this.onLabel) && isNotEmpty(this.offLabel);\n        },\n        label() {\n            return this.hasLabel ? (this.d_value ? this.onLabel : this.offLabel) : '\\u00A0';\n        },\n        dataP() {\n            return cn({\n                checked: this.active,\n                invalid: this.$invalid,\n                [this.size]: this.size\n            });\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <button\n        v-ripple\n        type=\"button\"\n        :class=\"cx('root')\"\n        :tabindex=\"tabindex\"\n        :disabled=\"disabled\"\n        :aria-pressed=\"d_value\"\n        @click=\"onChange\"\n        @blur=\"onBlur\"\n        v-bind=\"getPTOptions('root')\"\n        :aria-label=\"ariaLabel\"\n        :aria-labelledby=\"ariaLabelledby\"\n        :data-p-checked=\"active\"\n        :data-p-disabled=\"disabled\"\n        :data-p=\"dataP\"\n    >\n        <span :class=\"cx('content')\" v-bind=\"getPTOptions('content')\" :data-p=\"dataP\">\n            <slot>\n                <slot name=\"icon\" :value=\"d_value\" :class=\"cx('icon')\">\n                    <span v-if=\"onIcon || offIcon\" :class=\"[cx('icon'), d_value ? onIcon : offIcon]\" v-bind=\"getPTOptions('icon')\" />\n                </slot>\n                <span :class=\"cx('label')\" v-bind=\"getPTOptions('label')\">{{ label }}</span>\n            </slot>\n        </span>\n    </button>\n</template>\n\n<script>\nimport { cn } from '@primeuix/utils';\nimport { isNotEmpty } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport BaseToggleButton from './BaseToggleButton.vue';\n\nexport default {\n    name: 'ToggleButton',\n    extends: BaseToggleButton,\n    inheritAttrs: false,\n    emits: ['change'],\n    methods: {\n        getPTOptions(key) {\n            const _ptm = key === 'root' ? this.ptmi : this.ptm;\n\n            return _ptm(key, {\n                context: {\n                    active: this.active,\n                    disabled: this.disabled\n                }\n            });\n        },\n        onChange(event) {\n            if (!this.disabled && !this.readonly) {\n                this.writeValue(!this.d_value, event);\n                this.$emit('change', event);\n            }\n        },\n        onBlur(event) {\n            this.formField.onBlur?.(event);\n        }\n    },\n    computed: {\n        active() {\n            return this.d_value === true;\n        },\n        hasLabel() {\n            return isNotEmpty(this.onLabel) && isNotEmpty(this.offLabel);\n        },\n        label() {\n            return this.hasLabel ? (this.d_value ? this.onLabel : this.offLabel) : '\\u00A0';\n        },\n        dataP() {\n            return cn({\n                checked: this.active,\n                invalid: this.$invalid,\n                [this.size]: this.size\n            });\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}