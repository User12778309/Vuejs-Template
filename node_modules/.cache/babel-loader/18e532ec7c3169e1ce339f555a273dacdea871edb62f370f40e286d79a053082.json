{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nfunction s() {\n  let r = new Map();\n  return {\n    on(e, t) {\n      let n = r.get(e);\n      return n ? n.push(t) : n = [t], r.set(e, n), this;\n    },\n    off(e, t) {\n      let n = r.get(e);\n      return n && n.splice(n.indexOf(t) >>> 0, 1), this;\n    },\n    emit(e, t) {\n      let n = r.get(e);\n      n && n.forEach(i => {\n        i(t);\n      });\n    },\n    clear() {\n      r.clear();\n    }\n  };\n}\nexport { s as EventBus };","map":{"version":3,"names":["s","r","Map","on","e","t","n","get","push","set","off","splice","indexOf","emit","forEach","i","clear","EventBus"],"sources":["../../src/eventbus/index.ts"],"sourcesContent":["export type Handler = (evt: unknown) => void;\n\nexport interface EventBusOptions {\n    on(type: string, handler: Handler): void;\n    off(type: string, handler: Handler): void;\n    emit(type: string, evt?: unknown): void;\n    clear(): void;\n}\n\nexport function EventBus(): EventBusOptions {\n    const allHandlers = new Map<string, Handler[]>();\n\n    return {\n        on(type: string, handler: Handler) {\n            let handlers = allHandlers.get(type);\n\n            if (!handlers) handlers = [handler];\n            else handlers.push(handler);\n\n            allHandlers.set(type, handlers);\n\n            return this;\n        },\n        off(type: string, handler: Handler) {\n            const handlers = allHandlers.get(type);\n\n            if (handlers) {\n                handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n            }\n\n            return this;\n        },\n        emit(type: string, evt?: unknown) {\n            const handlers = allHandlers.get(type);\n\n            if (handlers) {\n                handlers.forEach((handler) => {\n                    handler(evt);\n                });\n            }\n        },\n        clear() {\n            allHandlers.clear();\n        }\n    };\n}\n"],"mappings":";;;AASO,SAASA,EAAA,EAA4B;EACxC,IAAMC,CAAA,GAAc,IAAIC,GAAA;EAExB,OAAO;IACHC,GAAGC,CAAA,EAAcC,CAAA,EAAkB;MAC/B,IAAIC,CAAA,GAAWL,CAAA,CAAYM,GAAA,CAAIH,CAAI;MAEnC,OAAKE,CAAA,GACAA,CAAA,CAASE,IAAA,CAAKH,CAAO,IADXC,CAAA,GAAW,CAACD,CAAO,GAGlCJ,CAAA,CAAYQ,GAAA,CAAIL,CAAA,EAAME,CAAQ,GAEvB,IACX;IAAA;IACAI,IAAIN,CAAA,EAAcC,CAAA,EAAkB;MAChC,IAAMC,CAAA,GAAWL,CAAA,CAAYM,GAAA,CAAIH,CAAI;MAErC,OAAIE,CAAA,IACAA,CAAA,CAASK,MAAA,CAAOL,CAAA,CAASM,OAAA,CAAQP,CAAO,MAAM,GAAG,CAAC,GAG/C,IACX;IAAA;IACAQ,KAAKT,CAAA,EAAcC,CAAA,EAAe;MAC9B,IAAMC,CAAA,GAAWL,CAAA,CAAYM,GAAA,CAAIH,CAAI;MAEjCE,CAAA,IACAA,CAAA,CAASQ,OAAA,CAASC,CAAA,IAAY;QAC1BA,CAAA,CAAQV,CAAG,CACf;MAAA,CAAC,CAET;IAAA;IACAW,MAAA,EAAQ;MACJf,CAAA,CAAYe,KAAA,CAAM,CACtB;IAAA;EACJ,CACJ;AAAA;AAAA,SAAAhB,CAAA,IAAAiB,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}