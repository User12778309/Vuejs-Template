{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { isNotEmpty } from '@primeuix/utils';\nimport BaseComponent from '@primevue/core/basecomponent';\nvar script = {\n  name: 'BaseEditableHolder',\n  \"extends\": BaseComponent,\n  emits: ['update:modelValue', 'value-change'],\n  props: {\n    modelValue: {\n      type: null,\n      \"default\": undefined\n    },\n    defaultValue: {\n      type: null,\n      \"default\": undefined\n    },\n    name: {\n      type: String,\n      \"default\": undefined\n    },\n    invalid: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    formControl: {\n      type: Object,\n      \"default\": undefined\n    }\n  },\n  inject: {\n    $parentInstance: {\n      \"default\": undefined\n    },\n    $pcForm: {\n      \"default\": undefined\n    },\n    $pcFormField: {\n      \"default\": undefined\n    }\n  },\n  data: function data() {\n    return {\n      d_value: this.defaultValue !== undefined ? this.defaultValue : this.modelValue\n    };\n  },\n  watch: {\n    modelValue: function modelValue(newValue) {\n      this.d_value = newValue;\n    },\n    defaultValue: function defaultValue(newValue) {\n      this.d_value = newValue;\n    },\n    $formName: {\n      immediate: true,\n      handler: function handler(newValue) {\n        var _this$$pcForm, _this$$pcForm$registe;\n        this.formField = ((_this$$pcForm = this.$pcForm) === null || _this$$pcForm === void 0 || (_this$$pcForm$registe = _this$$pcForm.register) === null || _this$$pcForm$registe === void 0 ? void 0 : _this$$pcForm$registe.call(_this$$pcForm, newValue, this.$formControl)) || {};\n      }\n    },\n    $formControl: {\n      immediate: true,\n      handler: function handler(newValue) {\n        var _this$$pcForm2, _this$$pcForm2$regist;\n        this.formField = ((_this$$pcForm2 = this.$pcForm) === null || _this$$pcForm2 === void 0 || (_this$$pcForm2$regist = _this$$pcForm2.register) === null || _this$$pcForm2$regist === void 0 ? void 0 : _this$$pcForm2$regist.call(_this$$pcForm2, this.$formName, newValue)) || {};\n      }\n    },\n    $formDefaultValue: {\n      immediate: true,\n      handler: function handler(newValue) {\n        this.d_value !== newValue && (this.d_value = newValue);\n      }\n    },\n    $formValue: {\n      immediate: false,\n      handler: function handler(newValue) {\n        var _this$$pcForm3;\n        if ((_this$$pcForm3 = this.$pcForm) !== null && _this$$pcForm3 !== void 0 && _this$$pcForm3.getFieldState(this.$formName) && newValue !== this.d_value) {\n          this.d_value = newValue;\n        }\n      }\n    }\n  },\n  formField: {},\n  methods: {\n    writeValue: function writeValue(value, event) {\n      var _this$formField$onCha, _this$formField;\n      if (this.controlled) {\n        this.d_value = value;\n        this.$emit('update:modelValue', value);\n      }\n      this.$emit('value-change', value);\n      (_this$formField$onCha = (_this$formField = this.formField).onChange) === null || _this$formField$onCha === void 0 || _this$formField$onCha.call(_this$formField, {\n        originalEvent: event,\n        value: value\n      });\n    },\n    // @todo move to @primeuix/utils\n    findNonEmpty: function findNonEmpty() {\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n      return values.find(isNotEmpty);\n    }\n  },\n  computed: {\n    $filled: function $filled() {\n      return isNotEmpty(this.d_value);\n    },\n    $invalid: function $invalid() {\n      var _this$$pcFormField, _this$$pcForm4;\n      return !this.$formNovalidate && this.findNonEmpty(this.invalid, (_this$$pcFormField = this.$pcFormField) === null || _this$$pcFormField === void 0 || (_this$$pcFormField = _this$$pcFormField.$field) === null || _this$$pcFormField === void 0 ? void 0 : _this$$pcFormField.invalid, (_this$$pcForm4 = this.$pcForm) === null || _this$$pcForm4 === void 0 || (_this$$pcForm4 = _this$$pcForm4.getFieldState(this.$formName)) === null || _this$$pcForm4 === void 0 ? void 0 : _this$$pcForm4.invalid);\n    },\n    $formName: function $formName() {\n      var _this$$formControl;\n      return !this.$formNovalidate ? this.name || ((_this$$formControl = this.$formControl) === null || _this$$formControl === void 0 ? void 0 : _this$$formControl.name) : undefined;\n    },\n    $formControl: function $formControl() {\n      var _this$$pcFormField2;\n      return this.formControl || ((_this$$pcFormField2 = this.$pcFormField) === null || _this$$pcFormField2 === void 0 ? void 0 : _this$$pcFormField2.formControl);\n    },\n    $formNovalidate: function $formNovalidate() {\n      var _this$$formControl2;\n      return (_this$$formControl2 = this.$formControl) === null || _this$$formControl2 === void 0 ? void 0 : _this$$formControl2.novalidate;\n    },\n    $formDefaultValue: function $formDefaultValue() {\n      var _this$$pcFormField3, _this$$pcForm5;\n      return this.findNonEmpty(this.d_value, (_this$$pcFormField3 = this.$pcFormField) === null || _this$$pcFormField3 === void 0 ? void 0 : _this$$pcFormField3.initialValue, (_this$$pcForm5 = this.$pcForm) === null || _this$$pcForm5 === void 0 || (_this$$pcForm5 = _this$$pcForm5.initialValues) === null || _this$$pcForm5 === void 0 ? void 0 : _this$$pcForm5[this.$formName]);\n    },\n    $formValue: function $formValue() {\n      var _this$$pcFormField4, _this$$pcForm6;\n      return this.findNonEmpty((_this$$pcFormField4 = this.$pcFormField) === null || _this$$pcFormField4 === void 0 || (_this$$pcFormField4 = _this$$pcFormField4.$field) === null || _this$$pcFormField4 === void 0 ? void 0 : _this$$pcFormField4.value, (_this$$pcForm6 = this.$pcForm) === null || _this$$pcForm6 === void 0 || (_this$$pcForm6 = _this$$pcForm6.getFieldState(this.$formName)) === null || _this$$pcForm6 === void 0 ? void 0 : _this$$pcForm6.value);\n    },\n    controlled: function controlled() {\n      return this.$inProps.hasOwnProperty('modelValue') || !this.$inProps.hasOwnProperty('modelValue') && !this.$inProps.hasOwnProperty('defaultValue');\n    },\n    // @deprecated use $filled instead\n    filled: function filled() {\n      return this.$filled;\n    }\n  }\n};\nexport { script as default };","map":{"version":3,"names":["script","name","BaseComponent","emits","props","modelValue","type","undefined","defaultValue","String","invalid","Boolean","disabled","formControl","Object","inject","$parentInstance","$pcForm","$pcFormField","data","d_value","watch","newValue","$formName","immediate","handler","_this$$pcForm","_this$$pcForm$registe","formField","register","call","$formControl","_this$$pcForm2","_this$$pcForm2$regist","$formDefaultValue","$formValue","_this$$pcForm3","getFieldState","methods","writeValue","value","event","_this$formField$onCha","_this$formField","controlled","$emit","onChange","originalEvent","findNonEmpty","_len","arguments","length","values","Array","_key","find","isNotEmpty","computed","$filled","$invalid","_this$$pcFormField","_this$$pcForm4","$formNovalidate","$field","_this$$formControl","_this$$pcFormField2","_this$$formControl2","novalidate","_this$$pcFormField3","_this$$pcForm5","initialValue","initialValues","_this$$pcFormField4","_this$$pcForm6","$inProps","hasOwnProperty","filled"],"sources":["../../src/baseeditableholder/BaseEditableHolder.vue"],"sourcesContent":["<script>\nimport { isNotEmpty } from '@primeuix/utils';\nimport BaseComponent from '@primevue/core/basecomponent';\n\nexport default {\n    name: 'BaseEditableHolder',\n    extends: BaseComponent,\n    emits: ['update:modelValue', 'value-change'],\n    props: {\n        modelValue: {\n            type: null,\n            default: undefined\n        },\n        defaultValue: {\n            type: null,\n            default: undefined\n        },\n        name: {\n            type: String,\n            default: undefined\n        },\n        invalid: {\n            type: Boolean,\n            default: undefined\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        formControl: {\n            type: Object,\n            default: undefined\n        }\n    },\n    inject: {\n        $parentInstance: {\n            default: undefined\n        },\n        $pcForm: {\n            default: undefined\n        },\n        $pcFormField: {\n            default: undefined\n        }\n    },\n    data() {\n        return {\n            d_value: this.defaultValue !== undefined ? this.defaultValue : this.modelValue\n        };\n    },\n    watch: {\n        modelValue(newValue) {\n            this.d_value = newValue;\n        },\n        defaultValue(newValue) {\n            this.d_value = newValue;\n        },\n        $formName: {\n            immediate: true,\n            handler(newValue) {\n                this.formField = this.$pcForm?.register?.(newValue, this.$formControl) || {};\n            }\n        },\n        $formControl: {\n            immediate: true,\n            handler(newValue) {\n                this.formField = this.$pcForm?.register?.(this.$formName, newValue) || {};\n            }\n        },\n        $formDefaultValue: {\n            immediate: true,\n            handler(newValue) {\n                this.d_value !== newValue && (this.d_value = newValue);\n            }\n        },\n        $formValue: {\n            immediate: false,\n            handler(newValue) {\n                if (this.$pcForm?.getFieldState(this.$formName) && newValue !== this.d_value) {\n                    this.d_value = newValue;\n                }\n            }\n        }\n    },\n    formField: {},\n    methods: {\n        writeValue(value, event) {\n            if (this.controlled) {\n                this.d_value = value;\n                this.$emit('update:modelValue', value);\n            }\n\n            this.$emit('value-change', value);\n\n            this.formField.onChange?.({ originalEvent: event, value });\n        },\n        // @todo move to @primeuix/utils\n        findNonEmpty(...values) {\n            return values.find(isNotEmpty);\n        }\n    },\n    computed: {\n        $filled() {\n            return isNotEmpty(this.d_value);\n        },\n        $invalid() {\n            return !this.$formNovalidate && this.findNonEmpty(this.invalid, this.$pcFormField?.$field?.invalid, this.$pcForm?.getFieldState(this.$formName)?.invalid);\n        },\n        $formName() {\n            return !this.$formNovalidate ? this.name || this.$formControl?.name : undefined;\n        },\n        $formControl() {\n            return this.formControl || this.$pcFormField?.formControl;\n        },\n        $formNovalidate() {\n            return this.$formControl?.novalidate;\n        },\n        $formDefaultValue() {\n            return this.findNonEmpty(this.d_value, this.$pcFormField?.initialValue, this.$pcForm?.initialValues?.[this.$formName]);\n        },\n        $formValue() {\n            return this.findNonEmpty(this.$pcFormField?.$field?.value, this.$pcForm?.getFieldState(this.$formName)?.value);\n        },\n        controlled() {\n            return this.$inProps.hasOwnProperty('modelValue') || (!this.$inProps.hasOwnProperty('modelValue') && !this.$inProps.hasOwnProperty('defaultValue'));\n        },\n        // @deprecated use $filled instead\n        filled() {\n            return this.$filled;\n        }\n    }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}